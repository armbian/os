name: Generate Download Index (admin)
on:
  repository_dispatch:
    types: ["Webindex update"]
  workflow_dispatch:

concurrency:
  group: webindex
  cancel-in-progress: false

jobs:

  Check:

    name: "Check membership"
    runs-on: fast
    steps:

      - name: "Check membership"
        uses: armbian/actions/team-check@main
        with:
          ORG_MEMBERS: ${{ secrets.ORG_MEMBERS }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TEAM: "Release manager"

  Webindex:

    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    name: "Generate Download Index"
    runs-on: ubuntu-latest
    needs: Check
    steps:

      - name: Checkout OS repository
        uses: actions/checkout@v4
        with:
          repository: armbian/os
          fetch-depth: 1
          clean: false

      - name: Generate index
        run: |
          A=$(rsync -ar rsync://rsync.armbian.com/dl/ | awk '{ print $2" " "https://rsync.armbian.com/dl/"$5" "$3"?"$4 }' | grep "archive/" | grep -v ".txt" | sed -e 's| |"\|"|g' -e 's|^|"|g' -e 's|$|"|g')
          B=$(gh release view --json assets --repo github.com/armbian/os | jq '.assets[] | .size, .url, .createdAt' | xargs -n3 -d'\n' | grep -v ".txt" | sed "s/\"//g"| sed -e 's| |"\|"|g' -e 's|^|"|g' -e 's|$|"|g')
          for line in $A $B; do
              SIZE=$(echo $line | cut -d"|" -f1 | sed "s/\"//g" | sed "s/\.//g" | sed "s/\,//g" )
              SIZE=$(echo "scale=0; $(echo $SIZE)/1024/1024" | bc -l)"Mb"
              DATETIME=$(echo $line | cut -d"|" -f3 | sed "s/\"//g")
              DATETIME=$(date -d "$(echo $DATETIME | sed "s/?/ /g")" +%s)
              URL=$(echo $line | cut -d"|" -f2 | sed "s/\"//g")
              NIGHTLY=""
              [[ "$URL" == *"github"* ]] && NIGHTLY="_nightly"
              NAME=$(echo $URL | cut -d"_" -f3 | awk '{print tolower($0)}')
              sufix=$(echo $URL | rev | cut -d'.' -f 1 | rev | sed "s/^/./" | sed "s/.xz//g")
              out_release=$(echo $URL | cut -d"_" -f4)
              out_branch=$(echo $URL | cut -d"_" -f5)
              out_kernel=$(echo $URL | cut -d"_" -f6-7 | cut -d"." -f1-3 | cut -d"_" -f1)
              out_desktop=$(echo $URL | cut -d"_" -f7- | cut -d"." -f1 | cut -d"_" -f1)
              echo "$NAME/${out_release^}_${out_branch}$([[ -n "${out_desktop}" ]] && echo "_")${out_desktop}${NIGHTLY}${sufix}|$URL|$DATETIME|$SIZE"
          done > index.csv

      - name: Download and compress torrent files
        run: |

          ls -l
          cat index.csv | grep torrent | grep -v trunk | cut -d"|" -f2 | xargs -n 1 -P 8 wget --tries=50 --directory-prefix=stable --backups=1 || true
          cat index.csv | grep torrent | grep trunk | cut -d"|" -f2 | xargs -n 1 -P 8 wget --tries=50 --directory-prefix=unstable --backups=1 || true

          # hack. we treat stable a bit different. Need to be unified once
          sed -i "s|https://rsync.armbian.com/dl/||" index.csv

          zip -qj unstable.zip unstable/*.torrent
          zip -qj stable.zip stable/*.torrent

      - uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: |
            index.csv
            stable.zip
            unstable.zip

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.KEY_UPLOAD }}
          known_hosts: ${{ secrets.KNOWN_HOSTS_ARMBIAN_UPLOAD }}
          if_key_exists: replace

      - name: Upload index
        run: |
          rsync -ar --progress -e "ssh -p 10023 -o StrictHostKeyChecking=accept-new" stable.zip upload@rsync.armbian.com:/storage/www/dl/torrent/all-torrents.zip
          rsync -e "ssh -p ${{ secrets.HOST_UPLOAD_PORT }}" -arvc --remove-source-files stable.zip unstable.zip index.csv ${{ secrets.HOST_UPLOAD_USER }}@${{ secrets.HOST_UPLOAD }}:/incoming/json
          
