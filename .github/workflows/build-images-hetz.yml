name: XXBuild Official Images
on:
  workflow_dispatch:
    inputs:
      runner:
        type: choice
        description: 'Build Infrastructure'
        options:
        - public
        - private
        default: private
      board:
        type: choice
        description: 'Board'
        options:
        # boards
        - all
        - uefi
        default: 'all'

jobs:

  start:
    name: "Power On"
    runs-on: ubuntu-latest
    steps:
     
      - name: Enable Hetzner Virtual Machines
        uses: armbian/actions/hetzner_on@main
        with:
          machine-type: cax11
          runners-count: 3
          machine-count: 2
          key: ${{ secrets.KEY_TORRENTS }}
          known_hosts: ${{ secrets.KNOWN_HOSTS_TORRENTS }}
          hetzner_id: ${{ secrets.HETZNER_ONE }}
          github_token: ${{ secrets.TEST }}

#  Kernel:
#    name: "Update kernel cache"
#    if: ${{ github.repository_owner == 'Armbian' }}
#    uses: armbian/scripts/.github/workflows/build-kernel-cache.yml@main
#    with:
#      ACCESS_NAME: igorpecovnik
#      BUILD_BRANCH: ""
#      BUILD_RUNNER: ${{ inputs.BUILD_RUNNER }}
#    secrets:
#      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
#      KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
#      KNOWN_HOSTS_UPLOAD: ${{ secrets.KNOWN_HOSTS_UPLOAD }}

  generaterelease:

#    needs: Kernel
    name: "Generate release"
    if: ${{ github.repository_owner == 'Armbian' }}
    runs-on: ubuntu-latest
    outputs:
      version: ${{steps.releases.outputs.version}}
    steps:
    
    - name: Checkout
      uses: actions/checkout@v3.5.2
      with:
        clean: false
    
    - name: "Generate version"
      if: ${{ github.event.inputs.version == '' }}
      id: changelog
      uses: TriPSs/conventional-changelog-action@v3.18.0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        git-message: 'Bump release to {version}'
        git-user-name: armbianworker
        git-user-email: info@armbian.com
        output-file: 'false'
        skip-version-file: 'false'
        skip-on-empty: 'false'
        skip-commit: 'false'
        skip-ci: 'false'
        version-file: "stable.json"
        pre-release: "false"
        git-branch: 'main'
        tag-prefix: ''
        pre-release-identifier: 'trunk'

    - name: Save
      id: releases
      run: |

        echo "${{ steps.changelog.outputs.tag }}" > tag
        echo "version=${{ steps.changelog.outputs.tag }}${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT

    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v3
      with:
        name: assets-for-download
        path: tag
        retention-days: 5
  
  Cluster_1:

    needs: [generaterelease]
    name: "Cluster 1/6"
    if: ${{ success() && github.repository_owner == 'Armbian' }}
    uses: armbian/scripts/.github/workflows/build-images.yml@main

    with:

      config: "${{ github.event.inputs.config || 'default.conf' }}"
      release: "stable"
      board: '${{ github.event.inputs.board }}'
      part: 1
      of: 6
      version: "${{ needs.generaterelease.outputs.version }}"

    secrets:
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      SSH_KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
      KNOWN_HOSTS_UPLOAD: ${{ secrets.KNOWN_HOSTS_UPLOAD }}
      GPG_KEY1: ${{ secrets.GPG_KEY1 }}
      GPG_PASSPHRASE1: ${{ secrets.GPG_PASSPHRASE1 }}

  Cluster_2:

    needs: [generaterelease]
    name: "Cluster 2/6"
    if: ${{ success() && github.repository_owner == 'Armbian' }}
    uses: armbian/scripts/.github/workflows/build-images.yml@main

    with:

      config: "${{ github.event.inputs.config || 'default.conf' }}"
      release: "stable"
      board: '${{ github.event.inputs.board }}'
      part: 2
      of: 6
      version: "${{ needs.generaterelease.outputs.version }}"

    secrets:
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      SSH_KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
      KNOWN_HOSTS_UPLOAD: ${{ secrets.KNOWN_HOSTS_UPLOAD }}
      GPG_KEY1: ${{ secrets.GPG_KEY1 }}
      GPG_PASSPHRASE1: ${{ secrets.GPG_PASSPHRASE1 }}

  Cluster_3:

    needs: [generaterelease]
    name: "Cluster 3/6"
    if: ${{ success() && github.repository_owner == 'Armbian' }}
    uses: armbian/scripts/.github/workflows/build-images.yml@main

    with:

      config: "${{ github.event.inputs.config || 'default.conf' }}"
      release: "stable"
      board: '${{ github.event.inputs.board }}'
      part: 3
      of: 6
      version: "${{ needs.generaterelease.outputs.version }}"

    secrets:
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      SSH_KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
      KNOWN_HOSTS_UPLOAD: ${{ secrets.KNOWN_HOSTS_UPLOAD }}
      GPG_KEY1: ${{ secrets.GPG_KEY1 }}
      GPG_PASSPHRASE1: ${{ secrets.GPG_PASSPHRASE1 }}

  Cluster_4:

    needs: [generaterelease]
    name: "Cluster 4/6"
    if: ${{ success() && github.repository_owner == 'Armbian' }}
    uses: armbian/scripts/.github/workflows/build-images.yml@main

    with:

      config: "${{ github.event.inputs.config || 'default.conf' }}"
      release: "stable"
      board: '${{ github.event.inputs.board }}'
      part: 4
      of: 6
      version: "${{ needs.generaterelease.outputs.version }}"

    secrets:
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      SSH_KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
      KNOWN_HOSTS_UPLOAD: ${{ secrets.KNOWN_HOSTS_UPLOAD }}
      GPG_KEY1: ${{ secrets.GPG_KEY1 }}
      GPG_PASSPHRASE1: ${{ secrets.GPG_PASSPHRASE1 }}

  Cluster_5:

    needs: [generaterelease]
    name: "Cluster 5/6"
    if: ${{ success() && github.repository_owner == 'Armbian' }}
    uses: armbian/scripts/.github/workflows/build-images.yml@main

    with:

      config: "${{ github.event.inputs.config || 'default.conf' }}"
      release: "stable"
      board: '${{ github.event.inputs.board }}'
      part: 5
      of: 6
      version: "${{ needs.generaterelease.outputs.version }}"

    secrets:
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      SSH_KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
      KNOWN_HOSTS_UPLOAD: ${{ secrets.KNOWN_HOSTS_UPLOAD }}
      GPG_KEY1: ${{ secrets.GPG_KEY1 }}
      GPG_PASSPHRASE1: ${{ secrets.GPG_PASSPHRASE1 }}

  Cluster_6:

    needs: [generaterelease]
    name: "Cluster 6/6"
    if: ${{ success() && github.repository_owner == 'Armbian' }}
    uses: armbian/scripts/.github/workflows/build-images.yml@main

    with:

      config: "${{ github.event.inputs.config || 'default.conf' }}"
      release: "stable"
      board: '${{ github.event.inputs.board }}'
      part: 6
      of: 6
      version: "${{ needs.generaterelease.outputs.version }}"

    secrets:
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      SSH_KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
      KNOWN_HOSTS_UPLOAD: ${{ secrets.KNOWN_HOSTS_UPLOAD }}
      GPG_KEY1: ${{ secrets.GPG_KEY1 }}
      GPG_PASSPHRASE1: ${{ secrets.GPG_PASSPHRASE1 }}


  Closing:

    name: "Closing"
    needs: [start,Cluster_1,Cluster_2,Cluster_3,Cluster_4,Cluster_5,Cluster_6]
    runs-on: ubuntu-latest
    steps:
    
    - name: Download a single artifact
      uses: actions/download-artifact@v3
      with:
         name: assets-for-download
         path: tag

    - name: "Generate key id" # We need this in case we run multiple runners on one machine
      run: echo "TAG=$(cat tag/tag)" >> $GITHUB_ENV
      shell: bash

    - name: "Keep only 3 releases"
      uses: Vucko130/delete-older-releases@v0.2.2
      with:
        keep_latest: 3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
    - name: "Purge action workflow logs"
      uses: igorjs/gh-actions-clean-workflow@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        days_old: 14

    - uses: ncipollo/release-action@v1
      if: ${{ github.repository_owner == 'Armbian' && github.event.inputs.version == '' }}
      with:
        tag: ${{ env.TAG }}
        omitBody: true
        omitName: true
        allowUpdates: true
        makeLatest: true
        token: ${{ secrets.GITHUB_TOKEN }}

    - uses: geekyeggo/delete-artifact@v2
      with:
         name: assets-for-download

  stop:
    name: "Power Off"
    needs: Closing
    runs-on: ubuntu-latest
    steps:
     
      - name: Enable Hetzner Virtual Machines
        uses: armbian/actions/hetzner_off@main
        with:
          machine-type: cax11
          runners-count: 3
          machine-count: 2
          key: ${{ secrets.KEY_TORRENTS }}
          known_hosts: ${{ secrets.KNOWN_HOSTS_TORRENTS }}
          hetzner_id: ${{ secrets.HETZNER_ONE }}
          github_token: ${{ secrets.TEST }}
