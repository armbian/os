name: Repository update (admin)
on:
#  repository_dispatch:
#    types: ["Repository update"]
  schedule:
    - cron: "00 3 * * *"
  workflow_dispatch:

#concurrency:
#  group: repository-${{ github.ref }}
#  cancel-in-progress: false

concurrency:
  group: pipeline-all${{ github.ref }}
  cancel-in-progress: false

jobs:
        
  gradle:
    strategy:
      fail-fast: false
      max-parallel: 8
      matrix:
        repository: ["debs-beta","debs"]
    
    name: Make
    runs-on: repository
    steps:

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.KEY_UPLOAD }}
          known_hosts: ${{ secrets.KNOWN_HOSTS_ARMBIAN_UPLOAD }}
          if_key_exists: replace
              
      - name: "Prepare for ${{ matrix.repository }}"
        run: |

         tree /incoming/${{ matrix.repository }}

      - name: Checkout build repository
        uses: actions/checkout@v3
        with:
          repository: armbian/build
          fetch-depth: 1
          clean: false

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_KEY1 }}
          passphrase: ${{ secrets.GPG_PASSPHRASE1 }}

      - name: "Build repository ${{ matrix.repository }}"
        run: |

          REPOSITORY="${{ matrix.repository }}"
          TARGET=${REPOSITORY/debs/repository}

#          sed -i 's|"gpgProvider": ".*"|"gpgProvider": "gpg2"|g' tools/repository/aptly.conf
#          tools/repository/repo -i /incoming/${{ matrix.repository }} -o /outgoing/${TARGET} -c update -p ${{ secrets.GPG_PASSPHRASE1 }}

      - name: "Sync repository ${{ matrix.repository }}"
        run: |

          REPOSITORY="${{ matrix.repository }}"
          TARGET=${REPOSITORY/debs/repository}
          
          # upload repository
#          rsync -arvc --exclude "dists" --delete /outgoing/${TARGET}/public/ ${{ secrets.HOST_UPLOAD_USER }}@stpete-mirror.armbian.com:/tank/upload/${TARGET}
#          rsync -arvc --delete /outgoing/${TARGET}/public/ ${{ secrets.HOST_UPLOAD_USER }}@stpete-mirror.armbian.com:/tank/upload/${TARGET}

  Prepare:
    name: "Upload to servers"
    needs: gradle
    outputs:
      matrix: ${{steps.json.outputs.JSON_CONTENT}}
    runs-on: ubuntu-latest
    steps:

      - name: Get primary mirrors from database
        id: json
        run: |

          echo 'JSON_CONTENT<<EOF' >> $GITHUB_OUTPUT
          curl -H "Authorization: Token ${{ secrets.NETBOX_TOKEN }}" -H "Accept: application/json; indent=4" \
          "https://stuff.armbian.com/netbox/api/virtualization/virtual-machines/?limit=500&name__empty=false&status=active&device_role=Mirror&tag=push" \
          | jq '.results[] | .name' | grep -v null | sed "s/\"//g" | jq -cnR '[inputs | select(length>0)]' | jq >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

  Sync:
    name: "Files"
    runs-on: repository
    needs: Prepare
    outputs:
      matrix: ${{needs.Prepare.outputs.matrix}}
    if: ${{ needs.Prepare.outputs.matrix != '[]' && needs.Prepare.outputs.matrix != '' }}
    timeout-minutes: 60
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:

        node: ${{fromJson(needs.Prepare.outputs.matrix)}}

    steps:

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.KEY_UPLOAD }}
          known_hosts: ${{ secrets.KNOWN_HOSTS_ARMBIAN_UPLOAD }}
          if_key_exists: replace

      - name: "Rsync to ${{ matrix.node }}:/tank/upload/repository"
        run: |

          rsync -arvc -e 'ssh -o StrictHostKeyChecking=accept-new' --exclude "dists" /outgoing/repository-beta/public/ ${{ secrets.HOST_UPLOAD_USER }}@${{ matrix.node }}:/tank/upload/repository-beta
          
  Index:
    name: "Index"
    runs-on: repository
    needs: Sync
    if: ${{ needs.Sync.outputs.matrix != '[]' && needs.Sync.outputs.matrix != '' }}
    timeout-minutes: 60
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:

        node: ${{fromJson(needs.Sync.outputs.matrix)}}

    steps:

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.KEY_UPLOAD }}
          known_hosts: ${{ secrets.KNOWN_HOSTS_ARMBIAN_UPLOAD }}
          if_key_exists: replace

      - name: "Rsync with delete to ${{ matrix.node }}:/tank/upload/repository"
        run: |

          rsync -arvc -e 'ssh -o StrictHostKeyChecking=accept-new' --delete /outgoing/repository-beta/public/ ${{ secrets.HOST_UPLOAD_USER }}@${{ matrix.node }}:/tank/upload/repository-beta
