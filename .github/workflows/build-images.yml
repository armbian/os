name: Build Images
on:

  schedule:
    - cron: "*/20 * * * *"

  workflow_dispatch:
    inputs:
      release:
        type: choice
        description: 'Release'
        options:
        - nightly
        - stable
      board:
        description: 'Board'
        required: false
        default: ''
      version:
        description: 'Version'
        required: false
        default: ''
  push:
    branches:
      - main
    paths-ignore:
      - "external/**"
      - "targets/**"
      - "userpatches/**"

jobs:

  Prepare:
  
    #if: ${{ github.repository_owner == 'Armbian' }}
    runs-on: ubuntu-latest
    steps:

      - name: "Cancel active workflow"
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          all_but_latest: true
          access_token: ${{ secrets.GITHUB_TOKEN }}

#  kernel:
#    name: "Update kernel cache"
#    needs: Prepare
#
#    if: ${{ github.repository_owner == 'Armbian' }}
#    uses: armbian/scripts/.github/workflows/build-kernel-cache.yml@main
#    with:
#      ACCESS_NAME: igorpecovnik
#      BUILD_BRANCH: ${{ inputs.BUILD_BRANCH }}
#      BUILD_RUNNER: ${{ inputs.BUILD_RUNNER }}
#    secrets:
#      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
#      KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
#      KNOWN_HOSTS_UPLOAD: ${{ secrets.KNOWN_HOSTS_UPLOAD }}


  generaterelease:

    needs: Prepare
    name: "Generate release"
    runs-on: ubuntu-latest
    outputs:
      version: ${{steps.releases.outputs.version}}
    steps:
    
    - name: Checkout
      uses: actions/checkout@v3.4.0
      with:
        clean: false
    
    - name: Generate changelog
      if: ${{ github.event.inputs.version == '' }}
      id: changelog
      uses: TriPSs/conventional-changelog-action@v3.18.0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        git-message: 'Bump release to {version}'
        git-user-name: armbianworker
        git-user-email: info@armbian.com
        output-file: 'false'
        skip-version-file: 'false'
        skip-on-empty: 'false'
        skip-commit: 'false'
        skip-ci: 'false'
        pre-release: 'true'
        git-branch: 'versioning'
        tag-prefix: ''
        pre-release-identifier: 'trunk'

    - name: "Generate body file"
      if: ${{ github.event.inputs.version == '' }}
      run: |
          echo "
            <p align='center'>
            <a href='https://www.armbian.com'>
            <img src='https://raw.githubusercontent.com/armbian/.github/master/profile/tux-two.png' width='400' height='226' alt='Armbian Linux'></a>
            <br>
            
            -  Images below are built on every Linux kernel code, config or patches changes,
            -  We provide here only a small selection of images that are currently interested for developers,
            -  If you want to enable more build targets in this list, edit <a href='https://github.com/armbian/os/tree/main/targets'>build config files</a>.</p>
            
            <br>
            If you don't find what you are looking for, check those images:
            <p>
            
            - <a href=https://www.armbian.com/download/ target=_blanks>officially supported</a> (known support status and suitable for production deployments),
            - <a href=https://github.com/armbian/community/>community supported</a> (unknown support status),
            - <a href=https://archive.armbian.com target=_blank>archived</a> (old builds with unknown support status),
            
            <br>
            &nbsp;
            </p>" > body.html
    - uses: ncipollo/release-action@v1
      if: ${{ github.event.inputs.version == '' }}
      #if: ${{ github.repository_owner == 'Armbian' && github.event.inputs.release != 'stable' }}
      with:
        tag: ${{ steps.changelog.outputs.tag }}
        name: "${{ steps.changelog.outputs.tag }}"
        bodyFile: "body.html"
        draft: "true"
        allowUpdates: true
        removeArtifacts: true
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Save
      id: releases
      run: |

        echo "${{ steps.changelog.outputs.tag }}" > tag
        echo "version=${{ steps.changelog.outputs.tag }}" >> $GITHUB_OUTPUT

    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v3
      with:
        name: assets-for-download
        path: tag
        retention-days: 5

  dispatch:
    needs: generaterelease
    strategy:
      matrix:
#        repo: ['armbian-alpha/os','armbian-beta/os','armbian-gama/os','armbian-delta/os','armbian-epsilon/os','armbian-zeta/os','armbian-eta/os','armbian-theta/os','armbian-jota/os','armbian-kappa/os']
        repo: ['armbian-alpha/os']
    runs-on: ubuntu-latest
    steps:
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.DISPATCH }}
          repository: ${{ matrix.repo }}
          event-type: "Dispatched jobs"

  Cluster_1:

    needs: dispatch
    name: "Cluster 1/6"
    if: ${{ success() && github.repository_owner == 'Armbian' }}
    uses: armbian/scripts/.github/workflows/build-images.yml@main

    with:

      config: "${{ github.event.inputs.config || 'default.conf' }}"
      release: "${{ github.event.inputs.release || 'nightly' }}"
      board: '${{ github.event.inputs.board }}'
      part: 1
      of: 6
      version: "${{ needs.generaterelease.outputs.version }}"

    secrets:
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      SSH_KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
      KNOWN_HOSTS_UPLOAD: ${{ secrets.KNOWN_HOSTS_UPLOAD }}
      GPG_KEY1: ${{ secrets.GPG_KEY1 }}
      GPG_PASSPHRASE1: ${{ secrets.GPG_PASSPHRASE1 }}

  Cluster_2:

    needs: dispatch
    name: "Cluster 2/6"
    if: ${{ success() && github.repository_owner == 'Armbian' }}
    uses: armbian/scripts/.github/workflows/build-images.yml@main

    with:

      config: "${{ github.event.inputs.config || 'default.conf' }}"
      release: "${{ github.event.inputs.release || 'nightly' }}"
      board: '${{ github.event.inputs.board }}'
      part: 2
      of: 6
      version: "${{ needs.generaterelease.outputs.version }}"

    secrets:
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      SSH_KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
      KNOWN_HOSTS_UPLOAD: ${{ secrets.KNOWN_HOSTS_UPLOAD }}
      GPG_KEY1: ${{ secrets.GPG_KEY1 }}
      GPG_PASSPHRASE1: ${{ secrets.GPG_PASSPHRASE1 }}

  Cluster_3:

    needs: dispatch
    name: "Cluster 3/6"
    if: ${{ success() && github.repository_owner == 'Armbian' }}
    uses: armbian/scripts/.github/workflows/build-images.yml@main

    with:

      config: "${{ github.event.inputs.config || 'default.conf' }}"
      release: "${{ github.event.inputs.release || 'nightly' }}"
      board: '${{ github.event.inputs.board }}'
      part: 3
      of: 6
      version: "${{ needs.generaterelease.outputs.version }}"

    secrets:
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      SSH_KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
      KNOWN_HOSTS_UPLOAD: ${{ secrets.KNOWN_HOSTS_UPLOAD }}
      GPG_KEY1: ${{ secrets.GPG_KEY1 }}
      GPG_PASSPHRASE1: ${{ secrets.GPG_PASSPHRASE1 }}

  Cluster_4:

    needs: dispatch
    name: "Cluster 4/6"
    if: ${{ success() && github.repository_owner == 'Armbian' }}
    uses: armbian/scripts/.github/workflows/build-images.yml@main

    with:

      config: "${{ github.event.inputs.config || 'default.conf' }}"
      release: "${{ github.event.inputs.release || 'nightly' }}"
      board: '${{ github.event.inputs.board }}'
      part: 4
      of: 6
      version: "${{ needs.generaterelease.outputs.version }}"

    secrets:
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      SSH_KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
      KNOWN_HOSTS_UPLOAD: ${{ secrets.KNOWN_HOSTS_UPLOAD }}
      GPG_KEY1: ${{ secrets.GPG_KEY1 }}
      GPG_PASSPHRASE1: ${{ secrets.GPG_PASSPHRASE1 }}

  Cluster_5:

    needs: dispatch
    name: "Cluster 5/6"
    if: ${{ success() && github.repository_owner == 'Armbian' }}
    uses: armbian/scripts/.github/workflows/build-images.yml@main

    with:

      config: "${{ github.event.inputs.config || 'default.conf' }}"
      release: "${{ github.event.inputs.release || 'nightly' }}"
      board: '${{ github.event.inputs.board }}'
      part: 5
      of: 6
      version: "${{ needs.generaterelease.outputs.version }}"

    secrets:
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      SSH_KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
      KNOWN_HOSTS_UPLOAD: ${{ secrets.KNOWN_HOSTS_UPLOAD }}
      GPG_KEY1: ${{ secrets.GPG_KEY1 }}
      GPG_PASSPHRASE1: ${{ secrets.GPG_PASSPHRASE1 }}

  Cluster_6:

    needs: dispatch
    name: "Cluster 6/6"
    if: ${{ success() && github.repository_owner == 'Armbian' }}
    uses: armbian/scripts/.github/workflows/build-images.yml@main

    with:

      config: "${{ github.event.inputs.config || 'default.conf' }}"
      release: "${{ github.event.inputs.release || 'nightly' }}"
      board: '${{ github.event.inputs.board }}'
      part: 6
      of: 6
      version: "${{ needs.generaterelease.outputs.version }}"

    secrets:
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      SSH_KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
      KNOWN_HOSTS_UPLOAD: ${{ secrets.KNOWN_HOSTS_UPLOAD }}
      GPG_KEY1: ${{ secrets.GPG_KEY1 }}
      GPG_PASSPHRASE1: ${{ secrets.GPG_PASSPHRASE1 }}


  Closing:

    name: "Closing"
    needs: [Cluster_1,Cluster_2,Cluster_3,Cluster_4,Cluster_5,Cluster_6]
    runs-on: ubuntu-latest
    steps:
    
    - name: Download a single artifact
      uses: actions/download-artifact@v3
      with:
         name: assets-for-download
         path: tag

    - name: "Generate key id" # We need this in case we run multiple runners on one machine
      run: echo "TAG=$(cat tag/tag)" >> $GITHUB_ENV
      shell: bash

    - name: "Keep only 3 releases"
      uses: Vucko130/delete-older-releases@v0.2.2
      with:
        keep_latest: 3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
    - name: "Purge action workflow logs"
      uses: igorjs/gh-actions-clean-workflow@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        days_old: 14

    - uses: ncipollo/release-action@v1
      if: ${{ github.event.inputs.version == '' }}
      #if: ${{ github.repository_owner == 'Armbian' && github.event.inputs.release != 'stable' }}
      with:
        tag: ${{ env.TAG }}
        omitBody: true
        omitName: true
        allowUpdates: true
        makeLatest: true
        token: ${{ secrets.GITHUB_TOKEN }}

    - uses: geekyeggo/delete-artifact@v2
      with:
         name: assets-for-download
