on: # <TEMPLATE-IGNORE>
  workflow_dispatch:  # <TEMPLATE-IGNORE>
jobs: # <TEMPLATE-IGNORE>
  # ------ aggregate all artifact chunks into a single dependency -------

  closing:
    name: "Footer"
    runs-on: ubuntu-latest
    if: ${{ !failure() && !cancelled() && inputs.ref == '' && (github.event.inputs.nightlybuild || [[nightlybuildDefaults]]) == 'yes' }}
    needs: [ "matrix_prep", "all-artifacts-ready", "all-images-ready" ]
    steps:

      - name: "Download all workflow run artifacts"
        if: ${{ (github.event.inputs.skipImages || [[skipImagesDefaults]]) != 'yes' }}
        uses: actions/download-artifact@v4
        with:
          name: assets-for-download-[[repository_ref]]
          path: downloads

      - name: "Read version"
        run: |

          echo "version=$(cat downloads/version 2>/dev/null || true)" >> $GITHUB_ENV

      # Delete artifact
      - uses: geekyeggo/delete-artifact@v5
        with:
          name: assets-for-download-[[repository_ref]]
          failOnError: false

      # Cleaning releases
      #
      # To do: we need to differentiate between pre and releases and optimise clenaing procees. Following action doesn't know to handle this best
      #- uses: dev-drprasad/delete-older-releases@v0.3.2
      #  with:
      #    repo: armbian/os
      #    keep_latest: 16
      #  env:
      #    GITHUB_TOKEN: "${{ env.GH_TOKEN }}"

      # Cleaning logs
      - name: "Keep only 14 days of workflow logs"
        uses: igorjs/gh-actions-clean-workflow@v6
        with:
          token: "${{ env.GH_TOKEN }}"
          runs_older_than: 7 # optional
          runs_to_keep: 0 # optional

      # Switch pre-release to release
      - uses: ncipollo/release-action@v1
        if: ${{ (github.event.inputs.skipImages || [[skipImagesDefaults]]) != 'yes' && (github.event.inputs.nightlybuild || [[nightlybuildDefaults]]) == 'yes' }}
        with:
          repo: "${{ env.RELEASE_REPOSITORY }}"
          tag: "${{ env.version }}"
          omitBody: true
          omitName: true
          allowUpdates: true
          makeLatest: true
          token: "${{ env.GH_TOKEN }}"

      - name: "Run repository mirroring to CDN"
        if: ${{ (github.event.inputs.skipImages || [[skipImagesDefaults]]) == 'no' }}
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.DISPATCH }}
          repository: armbian/armbian.github.io
          event-type: "Mirror"
          client-payload: '{"pull_repository": "armbian/${{ env.RELEASE_REPOSITORY }}", "cdn_tag": "${{ env.RELEASE_REPOSITORY }}"}'

      - name: "Run webindex update action"
        if: ${{ (github.event.inputs.skipImages || [[skipImagesDefaults]]) == 'no' }}
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.DISPATCH }}
          repository: armbian/armbian.github.io
          event-type: "Webindex update"